
virtual machine
server 10$ per month
server within server

docker container
image blue print

docker image
docker image use docker container

vmwhere 
window virtual machine

container

example
gmail 
email send


/////////////////////////////////


docker is a container its a common seprate all file packages project infomation
which we can use other machine use easily we did not install all things or version.


images:- its is template of project.
    not update only create or read
    all tools is availble

container:- its a instance of images.
    container is a process
    container is a isolate process
    container is work independence not effect what version you have
    

docker hub || docker desktop all tools availble
for download image 
    git pull tool name


base image and parent image

parent image:-
    we build images of project.
base image:-
    allready maid like programing laguage node react angular python this is base image which is allready build images


practical demo:-
create image
create container
action click run button port assigned || manual or random port 0
app running server


create docker image:-
docker build -t basic-app .

you can delete unUsed image;

if use then delete first container then delete image

command:-
docker image rm basic-app 
docker image rm basic-app -f for using image


container delete
docker container rm basic-app


manage version in images:-

delete all container and images command:-
docker system prune -a
refresh page


run docker update file
docker run --name basic-container -p 5500:5500 --rm -v absultePath file path :/app basic-app





1. mkdir DockerFiles inside touch DockerFile

2. instruction in DockerFile:
#getting base image ubuntu 
FROM ubuntu

MAINTAINER aijaj khan<automation.aijaj535@gmail.com>

FROM apt-get update

CMD ["echo", "Hello World!", "from my first docker image"]

3. exits

4.command in ubuntu docker build or images:-
# docker build . (same directory)
docker build -t myimage1:1.0 .

5. check docker images
docker images

docker run myimage1 or imageId



what is problem why we use docker?
same environment use another laptop envirment after 3 years replication enviroment some are package work only window when we setup in mac or ubuntu 
then not possible to work this mac or ubuntu
multiple environment ko replication is very difficult
so docker solve this problem?


container
jitni bhi enviroment hota hai hum kisi bhi os me use kar sakte hai 
its litght waight share and multiple repla


docker desktop its like docker-UI

deamon its whole work of docker like container create images create all activities work using this tool.


command:-
docker run -it ubuntu   (intractive mode) 
unable to find container so its auto installing container.

docker container ls (all container list)
docker start or stop containerName

docker exec dockerName bash (in local)

i want to attach local to server directory docker server
docker exec -it dockerName bash

docker run -it imageName
docker exec containerName command

docker images or docker image ls

docker run -it node  (it open repl shell)


hub.com its like github

images:-
image ko run karne ke liye container ki jarurut pardti hai
image like a os behaviour
single image work different container
data is a isolated 


port mapping:- exposed
docker run -it -p 1025:1025 mailhog
mapping port to 6000:9000  (docker is working 9000 port but we are port mapping on 6000 port example.  	

you can pass environment variable like that:-
docker run -it -p 1025:1025 -e key=value -e key=value mailhog
mapping port to 6000:9000  (docker is working 9000 port but we are port mapping on 6000 port example.  	

make a dockerFile

create custom image in local command:-
docker build -t imageName . (. is path and install automatic)

docker run -it -p 8000:8000   youtube-nodejs(imagename)

docker hub.io 
docker push container or images in hub.io 


docker composed:-
multiple container ko use kar sakte hai
docker-compose.yml file
docker compose up (composing all container or images make or linux command ahead use sudo window no need);
docker compose down (remove all container or images)
docker compose up -d (working on background )
cntl+c to stop container or images





docker details:-
docker desktop download and docker cli
docker intall CMD
docker --version ||  docker -v
docker run -it ubuntu(image_name)  //default install container if not install or exits
docker exec containerName command


container:- its like a machine
image:- its like a operating system(op) which work on container. 

docker start docker_name
docker stop dockerName
docker images:- show all images
docker run -it node  //install nodejs image
docker exec <container_name> <command>
docker container ls  //show all containers
docker is replication of envirment variable

multiple containers different type postgres,node, mongodb,redis,mailhog
we have to exec single container we got problem

solution:-
docker compose se multiple container create, setup, destroy
docker compose up:- all container installing
docker compose down:- all container removed
docker compose up -d:-  run on background



piyoush garg docker:-
problem:-
envirment setup to other system  munual its hacktic to all users so when we setup all these things
same envirment  multiple user setup very difficult so thats why solved this problem


docker deamon:-
    its a tool which all work operation like image create, image pull
docker desktop:-
    its docker status check on desktop

hub.com
there is all github for all containers
docker container ls -a (using a show all container list which is not active)


docker exec -it container_name bash (for attach specific container)


docker images
docker images ls
docker run -it node


docker run -it -p 6000: 9000 image_name  (port mapping image container port to local port)
if port not mapping not working any port.

docker run -it -p 6000: 9000 -e key : value -e key : value image_name   (envirment variable mapping)






basic nodejs app

docker build -t (tags)  nodejs_demo .  (custom images)

docker run -it -p 8000:8000 image_name
docker exec -it imageId bash
docker run -it -e port =4000 -p 4000: 4000 image_name (port mapping assigned)


hub.docker.com (make free account)
image push on docker like github

docker compose up  (here is all multpple containers)
docker compose down (remove all containers.)
docker compose up -d

 

